name: ecr-push
on:
  push:
    branches:
    - main
    tags:
    - '*'
env:
  AWS_DEFAULT_REGION: 'ap-northeast-1'
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
  PLATFORM: linux/amd64

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    timeout-minutes: 300
    steps:
    - uses: actions/checkout@v2
    # - uses: actions/cache@v2
    #   with:
    #     path: /tmp/.buildx-cache
    #     key: ${{ runner.os }}-buildx-step1-${{ github.sha }}
    #     restore-keys: |
    #       ${{ runner.os }}-buildx-
    #
    - uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
        aws-region: ap-northeast-1
    - uses: aws-actions/amazon-ecr-login@v1
      id: login-ecr
    - uses: docker/setup-buildx-action@v1
    - run: echo "::set-output name=sha7::$(echo ${GITHUB_SHA} | cut -c1-7)"
      id: slug
    - env:
        DOCKER_BUILDKIT: 1
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: seiji/aws-ecs-blue-green-deployment
        IMAGE_TAG: ${{ steps.slug.outputs.sha7 }}
      run: |
        docker buildx build \
          --build-arg BUILDKIT_INLINE_CACHE=1 \
          --cache-from=$ECR_REGISTRY/$ECR_REPOSITORY:latest \
          --platform ${{ env.PLATFORM }} \
          -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG \
          -t $ECR_REGISTRY/$ECR_REPOSITORY:latest \
          --push .
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
    - if: always()
      run: docker logout ${{ steps.login-ecr.outputs.registry }}
